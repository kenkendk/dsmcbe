#ifndef SPUEVENTHANDLER_EXTRAPACKAGES_H_
#define SPUEVENTHANDLER_EXTRAPACKAGES_H_

#define PACKAGE_SPU_MEMORY_SETUP 300
#define PACKAGE_SPU_MEMORY_MALLOC_REQUEST 301
#define PACKAGE_SPU_MEMORY_MALLOC_RESPONSE 302
#define PACKAGE_SPU_MEMORY_FREE 303

#define PACKAGE_SPU_CSP_ITEM_CREATE_REQUEST 304
#define PACKAGE_SPU_CSP_ITEM_CREATE_RESPONSE 305

#define PACKAGE_SPU_CSP_ITEM_FREE_REQUEST 306
#define PACKAGE_SPU_CSP_ITEM_FREE_RESPONSE 307

#define PACKAGE_SPU_CSP_CHANNEL_READ_ALT_REQUEST 308
#define PACKAGE_SPU_CSP_CHANNEL_READ_ALT_RESPONSE 309

#define PACKAGE_SPU_CSP_CHANNEL_WRITE_ALT_REQUEST 310
#define PACKAGE_SPU_CSP_CHANNEL_WRITE_ALT_RESPONSE 311
#define PACKAGE_SPU_CSP_DIRECT_TRANSFER 312

#define PACKAGE_SPU_CSP_FLUSH_ITEM 400

#define PACKAGE_SPU_CSP_CHANNEL_SETUP_DIRECT 401
#define PACKAGE_SPU_CSP_CHANNEL_POISON_DIRECT 402

//The data object is in use by a SPU
#define CSP_ITEM_MODE_IN_USE 1
//The data object is on the source SPE, but no longer in use
#define CSP_ITEM_MODE_READY_FOR_TRANSFER 2
//The data object is currently being transfered
#define CSP_ITEM_MODE_IN_TRANSIT 3
//The data object has been flushed into main memory
#define CSP_ITEM_MODE_FLUSHED 4
//The data object has been transfered onto the target SPU
#define CSP_ITEM_MODE_SENT 5

//The number of elements each pending write consumes
#define SPE_PENDING_WRITE_SIZE (3)

//To make the SPU stop each time it awaits external data, activate this flag
//#define SPU_STOP_AND_WAIT

#endif /* SPUEVENTHANDLER_EXTRAPACKAGES_H_ */
